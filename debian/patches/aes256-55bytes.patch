Index: python-crypto-2.0.1+dfsg1/src/SHA256.c
===================================================================
--- python-crypto-2.0.1+dfsg1.orig/src/SHA256.c	2009-03-20 19:00:39.000000000 +0100
+++ python-crypto-2.0.1+dfsg1/src/SHA256.c	2009-03-20 19:00:55.000000000 +0100
@@ -140,7 +140,7 @@
                                * then compress.  Then we can fall back to padding zeros and length
                                * encoding like normal.
                              */
-    if (md->curlen >= 56) {
+    if (md->curlen > 56) {
         for (; md->curlen < 64;)
             md->buf[md->curlen++] = 0;
         sha_compress(md);
Index: python-crypto-2.0.1+dfsg1/test/testdata.py
===================================================================
--- python-crypto-2.0.1+dfsg1.orig/test/testdata.py	2009-03-20 19:01:45.000000000 +0100
+++ python-crypto-2.0.1+dfsg1/test/testdata.py	2009-03-20 19:01:50.000000000 +0100
@@ -120,6 +120,8 @@
     		    "5e3dfe0cc98fd1c2de2a9d2fd893446da43d290f2512200c515416313cdf3192"),
 		   ("Rijndael is AES" * 1024, 
   	 	    "80fced5a97176a5009207cd119551b42c5b51ceb445230d02ecc2663bbfb483a"),
+		   ('This message is precisely 55 bytes long, to test a bug.',
+		    'f7fd017a3c721ce7ff03f3552c0813adcc48b7f33f07e5e2ba71e23ea393d103'),
 ]
 sha256 = sha256[:1]
 
